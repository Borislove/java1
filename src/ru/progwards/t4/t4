------------------------------СОДЕРЖАНИЕ----------------------------------
C4 Содержание

1. Сложение строк. Приведение примитивных типов.
сложение строк оператором "+" и через concat
вспоминаем размеры и диапазоны числовых типов
вспоминаем представление чисел в памяти компьютера
приведение к старшим типам
приведение к младшим типам
разбираемся с битами
явное приведение double к float
приведение вещественных типов к целым

2. Операторы сравнения, логические операторы, if
операторы сравнения
логические операторы и их приоритеты
порядок проверки частей логических выражений
битовые операторы вместо логических
конструкция If

3. Циклы, комментарии
цикл while
операторы break и continue
цикл do while
цикл for
бесконечные циклы
замечательное число E и получение его значения с использованием циклов
комментарии в Java
--------------------------------------------------------------------------
Латынь: con-catena  (объединение цепь) конкатенация  / или сложение строк





---------------------------ЗАКЛЮЧЕНИЕ--------------------------------------

S4 Заключение

1. Сложение строк. Приведение примитивных типов.
узнали, что сложение строк называется "конкатенация" и делается разными методами, в том числе оператором "+" и через функцию concat()
вспомнили размеры и диапазоны числовых типов, а также представление чисел в памяти компьютера
узнали, что:
приведение целочисленных типов с меньшим диапазоном к типам с большим диапазоном происходит неявно и не требует от нас внимания
при приведении вещественных типов к целочисленным типам, с условием попадания вещественного числа в диапазон целочисленного типа, происходит отбрасывание дробной части вещественного числа
во всех остальных случаях нам необходимо заботиться о попадании числа в целевой диапазон

2. Операторы сравнения, логические операторы, if
познакомились с операторами сравнения: >   <   ==  <=  >=  !=
познакомились с логическими операторами: &&   ||   !
узнали что приоритет логических операторов в порядке убывания от высшего к низшему такой: !  && ||
узнали, что при составлении логических выражений надо:
либо помнить приоритеты логических операций
либо пользоваться скобками
либо избегать сложных выражений, где приоритет влияет на результат
узнали, что проверка логических выражений выполняется лишь до тех пор, пока машине не станет известен результат
узнали, что если мы хотим полной проверки всех операндов, то можем использовать соответствующие битовые операторы: для && => &, для || => |
изучили конструкцию if else

3. Циклы, комментарии
цикл for является расширенной версией цикла while
комментарии следует использовать, в том числе для получения возможности в будущем быстро разобраться с логикой кода
комментарии в среде IntelliJ Idea удобно ставить сочетанием клавиш ctrl-/