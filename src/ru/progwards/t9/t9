------------------------------СОДЕРЖАНИЕ----------------------------------
C9 Содержание

1. Локальные и анонимные классы.
иерархия классов
локальный класс: что видит и откуда виден?
локальный класс: модификаторы
локальный класс: для чего он нужен?
локальный класс и функция как параметр
анонимный класс: для чего он нужен?
синтаксис анонимного класса
анонимный класс: реализация интерфейса

2. Примитивы и объекты как параметры.
что хранится в переменной?
знакомство со стеком и кучей
примитив как параметр
объект как параметр
генерация методов класса в среде IntelliJ Idea

3. BigDecimal, BigInteger.
BigDecimal: для чего он нужен?
иерархия числовых классов
хранение числа в BigDecimal: unscaledValue и scale
BigDecimal: конструкторы, константы, методы
масштаб результата операций
MathContext - точность и способ округления
RoundingMode - способы округления
подводные камни BigDecimal:
инициализация при помощи double или float
использование функции equals для сравнения
деление без указания способа округления
некоторые методы класса BigInteger
---------------------------ЗАКЛЮЧЕНИЕ--------------------------------------
S9 Заключение

1. Локальные и анонимные классы.
локальные классы похожи на внутренние классы
локальные классы можно использовать как обычные классы, если известно что они
 не понадобятся за пределами блока кода, в котором они определены
анонимные классы подобны локальным классам без имени
анонимные классы удобно использовать для передачи функций как параметров метода
объект локального или анонимного класса существует пока есть хотя бы одна ссылка на него

2. Примитивы и объекты как параметры.
знакомство с работой стека и кучи при передаче в функцию в качестве параметров примитивов и объектов
при передаче примитива как параметра в функцию, мы не можем воздействовать на оригинал примитива
при передаче объекта (в том числе массива) как параметра в функцию, в стеке происходит создание
 новой переменной-копии, ссылающейся на этот объект. Поэтому:
изменение объекта внутри функции является изменением оригинала объекта
присвоение переменной-копии ссылки на другой объект никак не влияет на оригинальную переменную и,
 соответственно, на оригинальный объект

3. BigDecimal, BigInteger.
BigDecimal это класс для точных вычислений
объект BigDecimal является неизменяемым числом произвольной точности
при делении следует указывать способ округления и масштаб
дробные значения следует инициализировать строками
для сравнения чисел правильно использовать не equals, а compareTo