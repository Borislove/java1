package ru.progwards.java1.lessons.compare_if_cycles;

public class TriangleSimpleInfo {

    /*Задания будут на тему треугольников, Золотого сечения и чисел Фибоначчи.
    Задача 1. Класс TriangleSimpleInfo_5

    Рекомендации к тестированию: проверьте isEquilateralTriangle с параметрами
    2, 2, 3
    2, 3, 2
    3, 2, 2
    2, 2, 2
    3, 3, 3
    Обязательно протестируйте остальные методы, вызвав из из функции main*/

    //-------------------------------------------------------------------------------------------------------
    /*1.1 Реализовать функцию
    public static int maxSide(int a, int b, int c),
    которая получает параметрами длины сторон треугольника, а вернуть должна наибольшую длину стороны.*/
    public static int maxSide(int a, int b, int c) {
        return max(a, max(b, c));
    }

    //-------------------------------------------------------------------------------------------------------
    /*1.2 Реализовать функцию
    public static int minSide(int a, int b, int c),
    которая получает параметрами длины сторон треугольника, а вернуть должна наименьшую длину стороны.*/
    public static int minSide(int a, int b, int c) {
        return min(a, min(b, c));
    }
    //-------------------------------------------------------------------------------------------------------

    /*1.3 Реализовать функцию
    public static boolean isEquilateralTriangle(int a, int b, int c),
    которая получает параметрами длины сторон треугольника, а вернуть должна true, если треугольник равносторонний
    и false в противном случае.*/

    public static boolean isEquilateralTriangle(int a, int b, int c) {
        return a == b && b == c;
    }
    //-------------------------------------------------------------------------------------------------------

    //проверка на положительные стороны
    //-------------------------------------------------------------------------------------------------------
    public static boolean isPositiveSide(int a, int b, int c) {
        return a > 0 && b > 0 && c > 0;
    }

    //максимальное значение
    //-------------------------------------------------------------------------------------------------------
    private static int max(int a, int b) {
        return (a >= b) ? a : b;
    }

    //минимальное значение
    //-------------------------------------------------------------------------------------------------------
    private static int min(int a, int b) {
        return (a <= b) ? a : b;
    }
    //-------------------------------------------------------------------------------------------------------

    public static void main(String[] args) {
    }
}



