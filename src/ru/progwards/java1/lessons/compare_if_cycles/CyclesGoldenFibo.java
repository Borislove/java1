package ru.progwards.java1.lessons.compare_if_cycles;


public class CyclesGoldenFibo {
    /*
///////////////////////////////////////////////////////////////////////////////////////////////////////////////
            3.1 Реализовать функцию
        public static boolean containsDigit(int number, int digit), которая будет возвращать true,
        если число number содержит цифру digit.
///////////////////////////////////////////////////////////////////////////////////////////////////////////////
        */
    public static boolean containsDigit(int number, int digit) {

        if (number <= 9 && number >= 0 && number == digit) {
            return true;
        } else
            do {
                int n = number % 10;
                if (n == digit) {
                    return true;
                }
                number /= 10;
            } while (number > 0);

        return false;
    }

    /*Теперь проведём исследование. Есть ли у Золотого треугольника связь с числами Фибоначчи.
        Золотой треугольник это равнобедренный треугольник у которого ребро относится к основанию как 1.61803
        (приблизительно), то есть по правилу Золотого сечения. Числа Фибоначчи это ряд чисел
         1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, ...
         в котором первые два элемента равны 1
        , а каждый следующий равен сумме двух предыдущих.
        Для проведения этого исследования нам придётся решить две задачи.*/

    /*
///////////////////////////////////////////////////////////////////////////////////////////////////////////////
        3.2 Реализовать, используя любой цикл, функцию
        public static int fiboNumber(int n), которая будет возвращать n-ое число Фибоначчи (нумерация начинается с 1,
        то есть при n = 3 должно вернуться число Фибоначчи 2, а при n = 10 число 55).
///////////////////////////////////////////////////////////////////////////////////////////////////////////////
     */

    // TODO: 16.03.2020 выводить фибо ведь надо...не прокатило
    /*
    //-----------------------------------------------------------------------------------------
    public static int fiboNumber(int n) { //OK: //

        if (n == 1) {
            return 1;
        } else if (n == 2) {
            return 1;
        } else {
            return fiboNumber(n - 1) + fiboNumber(n - 2);
        }
    }
    //----------------------------------------------------------------------------------------- */

    public static int fiboNumber(int n) {

        if (n == 1 || n == 2)
            return 1;

        int a = 1;
        int b = 0;
        int fibo = 0;

        for (int i = 0; i < n; i++) {
            fibo = a + b;
            a = b;
            b = fibo;
             System.out.println(fibo);
        }
        return fibo;
    }

    /*
///////////////////////////////////////////////////////////////////////////////////////////////////////////////
        3.3 Реализовать функцию
      public static boolean isGoldenTriangle(int a, int b, int c), которая будет возвращать true, если треугольник
      со сторонами a, b, c является Золотым. Определим критерии. Он должен быть равнобедренным и отношение ребра
      к основанию должно лежать между значениями 1.61703 и 1.61903.
///////////////////////////////////////////////////////////////////////////////////////////////////////////////
  */
    public static boolean isGoldenTriangle(int a, int b, int c) {

        boolean gold = false; //default false;

        double value1 = 1.61703;
        double value2 = 1.61903;

        double ab = (double) (a) / (double) (c);
        double ac = (double) (a) / (double) (b);
        double bc = (double) (b) / (double) (a);

        if (a == b) {
            if (ab > value1 && ab < value2) {
                System.out.println("Золотой треугольник!" + a + " " + b + " " + c);
                gold = true;
            }
        }

        if (a == c) {
            if (ac > value1 && ac < value2) {
                System.out.println("Золотой треугольник!" + a + " " + b + " " + c);
                gold = true;
            }
        }

        if (b == c) {
            if (bc > value1 && bc < value2) {
                System.out.println("Золотой треугольник!" + a + " " + b + " " + c);
                gold = true;
            }
        }
        return gold;
    }

    /*
///////////////////////////////////////////////////////////////////////////////////////////////////////////////
    Далее в функции public static void main(String[] args) вывести на консоль, используя цикл, 15 первых
    чисел Фибоначчи. После этого, используя вложенные циклы, определить: есть ли среди треугольников, длины
    сторон которых являются натуральными числами не превышающими 100, Золотые треугольники. И если есть,
    вывести на консоль длины основания и рёбер этих треугольников.
    Если всё получилось, посмотрите на консоль и сделайте вывод: есть ли связь между числами Фибоначчи и
    Золотыми треугольниками
///////////////////////////////////////////////////////////////////////////////////////////////////////////////
*/
    public static void main(String[] args) {

        System.out.println(fiboNumber(15));

        /*Золотой треугольник!55 34 55
          Золотой треугольник!89 55 89*/

        for (int i = 0; i < 100; i++) {
            for (int j = 0; j < 100; j++) {
                if (TriangleInfo.isTriangle(i, j, i) && TriangleInfo.isIsoscelesTriangle(i, j, i) && isGoldenTriangle(i, j, i)) {
                }
            }
        }

        //-----------------------------------------------------------------------------------------------------------
      /*  for (int i = 1; i <= 100; i++) {
            for (int j = 1; j <= 100; j++) {
                for (int k = 1; k <= 100; k++) {
                    if (TriangleInfo.isTriangle(i, j, k) && TriangleInfo.isIsoscelesTriangle(i, j, k) && isGoldenTriangle(i, j, k)) {
                        System.out.println(i + " " + j + " " + k);
                    }
                }
            }
        }*/
    }
}




